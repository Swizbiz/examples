/*
 * Copyright 2018 Devsoap Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
buildscript {
    repositories {
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "io.ratpack:ratpack-gradle:1.5.4"
        classpath 'se.transmode.gradle:gradle-docker:1.2'
        classpath "com.moowork.gradle:gradle-node-plugin:1.2.0"
    }
}

apply plugin: "io.ratpack.ratpack-groovy"
apply plugin: 'groovy'
apply plugin: 'docker'
apply plugin: "com.moowork.node"

repositories {
    jcenter()
}

dependencies {
    compile 'javax.money:money-api:1.0'
    compile 'org.javamoney:moneta:1.0'
    compile 'org.slf4j:slf4j-simple:1.7.25'
    compile 'org.flywaydb:flyway-core:4.0.3'
    compile ratpack.dependency('h2')
}


distDocker {
    exposePort(5050)
}

node {
    download = true
    version = '8.11.3'
    yarnVersion = '1.7.0'
}

/**
 * Initialize Gradle wrapper for project
 */
task wrapper(type: Wrapper) {
    gradleVersion = '4.7'
}

/**
 * Create the initial version package.json
 */
task initYarn(type: YarnTask) {
    outputs.file file('package.json')
    args = ['init', '--yes']
}

/**
 * Adds client dependencies to package.json
 */
task addClientDependencies(type: YarnTask) {
    outputs.file file('package.json')
    args = ['add',
            'react',
            'react-dom',
            '@material-ui/core'
    ]
}

/**
 * Adds our development time dependencies to package.json
 */
task addDevelopmentDependenciesWebpack(type: YarnTask) {
    outputs.file file('package.json')
    args = ['add',
            'webpack',
            'webpack-cli',
            'babel-loader',
            'babel-core',
            'babel-preset-es2015',
            'babel-preset-react',
            '--dev'
    ]
}

/**
 * Run webpack to package our applications
 */
task runWebpack(type: YarnTask) {
    inputs.dir file('src/main/jsx')
    inputs.file file('package.json')
    inputs.file file('webpack.config.js')
    outputs.file file('build/resources/main/static/bundle.js')
    args = ['run', 'webpack', '--config webpack.config.js']
}

/**
 * Installs client side dependencies with YARN
 */
task installClientDeps {
    dependsOn initYarn,addClientDependencies,addDevelopmentDependenciesWebpack,runWebpack
}
run.dependsOn(installClientDeps)

distributions {
    main {
        contents {
            from(installClientDeps) {
                into "app/static"
            }
        }
    }
}
